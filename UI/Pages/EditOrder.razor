@page "/EditOrder/{OrderId}"
@inject HttpClient Http
@inject NavigationManager NavManager
@using global::Shared.DTOs;
@using Microsoft.AspNetCore.Components.Forms;
@using System.Text.Json;

@if (order != null)
{
    <h3>Edit Order</h3>

    <EditForm Model="order" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group">
            <label for="email">Email:</label>
            <InputText id="email" class="form-control" @bind-Value="order.Email" />
        </div>

        <div class="form-group">
            <label for="buyDate">Buy Date:</label>
            <InputDate id="buyDate" class="form-control" @bind-Value="order.BuyDate" />
        </div>
        <div class="form-group">
            <label for="address">Address:</label>
            <div class="form-group">
                <label for="postal">Postal:</label>
                <InputNumber id="postal" class="form-control" @bind-Value="order.Address.Postal" />
            </div>
            <div class="form-group">
                <label for="streetNumber">Street Number:</label>
                <InputNumber id="streetNumber" class="form-control" @bind-Value="order.Address.StreetNumber" />
            </div>
            <div class="form-group">
                <label for="city">City:</label>
                <InputText id="city" class="form-control" @bind-Value="order.Address.City" />
            </div>
            <div class="form-group">
                <label for="country">Country:</label>
                <InputText id="country" class="form-control" @bind-Value="order.Address.Country" />
            </div>
            <div class="form-group">
                <label for="street">Street:</label>
                <InputText id="street" class="form-control" @bind-Value="order.Address.Street" />
            </div>
            <div class="form-group">
                <label for="cardNumber">Card Number:</label>
                <InputText id="cardNumber" class="form-control" @bind-Value="order.Address.CardNumber" />
            </div>
        </div>

        <div class="button-group">
            <button type="submit" class="btn btn-primary mt-1">Update Order</button>
            <button class="btn btn-secondary mt-1" @onclick="Back">Back</button>
        </div>
    </EditForm>
}
else
{
    <p>Loading...</p>
}

@code {
    [Parameter]
    public string OrderId { get; set; }

    OrderDto order;

    protected override async Task OnInitializedAsync()
    {
        int orderId = int.Parse(OrderId);
        order = await Http.GetFromJsonAsync<OrderDto>("api/Orders/" + OrderId);
    }

    private async Task HandleValidSubmit()
    {
        var response = await Http.PutAsJsonAsync("api/Orders/" + order.OrderId, order);
        if (response.IsSuccessStatusCode)
        {
            order = await Http.GetFromJsonAsync<OrderDto>("api/Orders/" + OrderId);
            NavManager.NavigateTo("/OrderOverview");
        }
        else
        {
            var errorResponse = await response.Content.ReadAsStringAsync();
            Console.WriteLine(errorResponse);
        }
    }

    void Back()
    {
        NavManager.NavigateTo("/OrderOverview");
    }
}